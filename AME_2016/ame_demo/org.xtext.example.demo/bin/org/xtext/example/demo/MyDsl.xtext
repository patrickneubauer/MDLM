// automatically generated by Xtext
grammar at.ac.tuwien.big.xmltext.idIdref.IdIdref with org.eclipse.xtext.common.Terminals

import "platform:/plugin/idIdref.xsd"
import "http://www.eclipse.org/emf/2003/XMLType" as type
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

EmployeeListType:
	{EmployeeListType}
	'EmployeeListType'
	"[" ('boss' "[" boss+=BossType ("," boss+=BossType)* "]")? ('employee' "[" employee+=EmployeeType (","
	employee+=EmployeeType)* "]")? "]";

BossType:
	'BossType'
	"["
	'lastName' lastName=String0
	'birthDate' birthDate=Date
	'superBoss' superBoss=[IdValues]
	'bossId' bossId=IdValues
	"]";

EmployeeType:
	'EmployeeType'
	"["
	'lastName' lastName=String0
	'birthDate' birthDate=Date
	'boss' boss=[IdValues]
	'employeeId' employeeId=IdValues
	"]";

String0 returns type::String:
/* TODO: implement this rule and an appropriate IValueConverter */
STRING;

IdValues:
	{IdValues} name=ID0;

Date returns type::Date:
/* TODO: implement this rule and an appropriate IValueConverter */
INT "-" INT "-" INT;

ID0 returns type::ID:
/* TODO: implement this rule and an appropriate IValueConverter */
ID;

EString:
	STRING;