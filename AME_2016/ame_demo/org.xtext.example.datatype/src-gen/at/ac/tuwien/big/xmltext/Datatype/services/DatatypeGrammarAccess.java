/*
 * generated by Xtext
 */
package at.ac.tuwien.big.xmltext.Datatype.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import java.util.List;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class DatatypeGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class LibraryTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "LibraryType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cLibraryTypeAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLibraryTypeKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cCustomerKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cCustomerAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cCustomerCustomerTypeParserRuleCall_3_2_0 = (RuleCall)cCustomerAssignment_3_2.eContents().get(0);
		private final Group cGroup_3_3 = (Group)cGroup_3.eContents().get(3);
		private final Keyword cCommaKeyword_3_3_0 = (Keyword)cGroup_3_3.eContents().get(0);
		private final Assignment cCustomerAssignment_3_3_1 = (Assignment)cGroup_3_3.eContents().get(1);
		private final RuleCall cCustomerCustomerTypeParserRuleCall_3_3_1_0 = (RuleCall)cCustomerAssignment_3_3_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_3_4 = (Keyword)cGroup_3.eContents().get(4);
		private final Keyword cRightSquareBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//LibraryType:
		//	{LibraryType} "LibraryType" "[" ("customer" "[" customer+=CustomerType ("," customer+=CustomerType)* "]")? "]";
		@Override public ParserRule getRule() { return rule; }

		//{LibraryType} "LibraryType" "[" ("customer" "[" customer+=CustomerType ("," customer+=CustomerType)* "]")? "]"
		public Group getGroup() { return cGroup; }

		//{LibraryType}
		public Action getLibraryTypeAction_0() { return cLibraryTypeAction_0; }

		//"LibraryType"
		public Keyword getLibraryTypeKeyword_1() { return cLibraryTypeKeyword_1; }

		//"["
		public Keyword getLeftSquareBracketKeyword_2() { return cLeftSquareBracketKeyword_2; }

		//("customer" "[" customer+=CustomerType ("," customer+=CustomerType)* "]")?
		public Group getGroup_3() { return cGroup_3; }

		//"customer"
		public Keyword getCustomerKeyword_3_0() { return cCustomerKeyword_3_0; }

		//"["
		public Keyword getLeftSquareBracketKeyword_3_1() { return cLeftSquareBracketKeyword_3_1; }

		//customer+=CustomerType
		public Assignment getCustomerAssignment_3_2() { return cCustomerAssignment_3_2; }

		//CustomerType
		public RuleCall getCustomerCustomerTypeParserRuleCall_3_2_0() { return cCustomerCustomerTypeParserRuleCall_3_2_0; }

		//("," customer+=CustomerType)*
		public Group getGroup_3_3() { return cGroup_3_3; }

		//","
		public Keyword getCommaKeyword_3_3_0() { return cCommaKeyword_3_3_0; }

		//customer+=CustomerType
		public Assignment getCustomerAssignment_3_3_1() { return cCustomerAssignment_3_3_1; }

		//CustomerType
		public RuleCall getCustomerCustomerTypeParserRuleCall_3_3_1_0() { return cCustomerCustomerTypeParserRuleCall_3_3_1_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_3_4() { return cRightSquareBracketKeyword_3_4; }

		//"]"
		public Keyword getRightSquareBracketKeyword_4() { return cRightSquareBracketKeyword_4; }
	}

	public class CustomerTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "CustomerType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCustomerTypeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cFirstNameKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cFirstNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cFirstNameString0ParserRuleCall_3_0 = (RuleCall)cFirstNameAssignment_3.eContents().get(0);
		private final Keyword cLastNameKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cLastNameAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cLastNameString0ParserRuleCall_5_0 = (RuleCall)cLastNameAssignment_5.eContents().get(0);
		private final Keyword cBirthDateKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cBirthDateAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cBirthDateDateParserRuleCall_7_0 = (RuleCall)cBirthDateAssignment_7.eContents().get(0);
		private final Keyword cBirthTimeKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cBirthTimeAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cBirthTimeTimeParserRuleCall_9_0 = (RuleCall)cBirthTimeAssignment_9.eContents().get(0);
		private final Group cGroup_10 = (Group)cGroup.eContents().get(10);
		private final Keyword cDateTimeKeyword_10_0 = (Keyword)cGroup_10.eContents().get(0);
		private final Assignment cDateTimeAssignment_10_1 = (Assignment)cGroup_10.eContents().get(1);
		private final RuleCall cDateTimeDateTimeParserRuleCall_10_1_0 = (RuleCall)cDateTimeAssignment_10_1.eContents().get(0);
		private final Keyword cAgeKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Assignment cAgeAssignment_12 = (Assignment)cGroup.eContents().get(12);
		private final RuleCall cAgeIntegerParserRuleCall_12_0 = (RuleCall)cAgeAssignment_12.eContents().get(0);
		private final Keyword cPrizeKeyword_13 = (Keyword)cGroup.eContents().get(13);
		private final Assignment cPrizeAssignment_14 = (Assignment)cGroup.eContents().get(14);
		private final RuleCall cPrizeDecimalParserRuleCall_14_0 = (RuleCall)cPrizeAssignment_14.eContents().get(0);
		private final Keyword cDisabledKeyword_15 = (Keyword)cGroup.eContents().get(15);
		private final Assignment cDisabledAssignment_16 = (Assignment)cGroup.eContents().get(16);
		private final RuleCall cDisabledBooleanParserRuleCall_16_0 = (RuleCall)cDisabledAssignment_16.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_17 = (Keyword)cGroup.eContents().get(17);
		
		//CustomerType:
		//	"CustomerType" "[" "firstName" firstName=String0 "lastName" lastName=String0 "birthDate" birthDate=Date "birthTime"
		//	birthTime=Time ("dateTime" dateTime=DateTime)? "age" age=Integer "prize" prize=Decimal "disabled" disabled=Boolean
		//	"]";
		@Override public ParserRule getRule() { return rule; }

		//"CustomerType" "[" "firstName" firstName=String0 "lastName" lastName=String0 "birthDate" birthDate=Date "birthTime"
		//birthTime=Time ("dateTime" dateTime=DateTime)? "age" age=Integer "prize" prize=Decimal "disabled" disabled=Boolean "]"
		public Group getGroup() { return cGroup; }

		//"CustomerType"
		public Keyword getCustomerTypeKeyword_0() { return cCustomerTypeKeyword_0; }

		//"["
		public Keyword getLeftSquareBracketKeyword_1() { return cLeftSquareBracketKeyword_1; }

		//"firstName"
		public Keyword getFirstNameKeyword_2() { return cFirstNameKeyword_2; }

		//firstName=String0
		public Assignment getFirstNameAssignment_3() { return cFirstNameAssignment_3; }

		//String0
		public RuleCall getFirstNameString0ParserRuleCall_3_0() { return cFirstNameString0ParserRuleCall_3_0; }

		//"lastName"
		public Keyword getLastNameKeyword_4() { return cLastNameKeyword_4; }

		//lastName=String0
		public Assignment getLastNameAssignment_5() { return cLastNameAssignment_5; }

		//String0
		public RuleCall getLastNameString0ParserRuleCall_5_0() { return cLastNameString0ParserRuleCall_5_0; }

		//"birthDate"
		public Keyword getBirthDateKeyword_6() { return cBirthDateKeyword_6; }

		//birthDate=Date
		public Assignment getBirthDateAssignment_7() { return cBirthDateAssignment_7; }

		//Date
		public RuleCall getBirthDateDateParserRuleCall_7_0() { return cBirthDateDateParserRuleCall_7_0; }

		//"birthTime"
		public Keyword getBirthTimeKeyword_8() { return cBirthTimeKeyword_8; }

		//birthTime=Time
		public Assignment getBirthTimeAssignment_9() { return cBirthTimeAssignment_9; }

		//Time
		public RuleCall getBirthTimeTimeParserRuleCall_9_0() { return cBirthTimeTimeParserRuleCall_9_0; }

		//("dateTime" dateTime=DateTime)?
		public Group getGroup_10() { return cGroup_10; }

		//"dateTime"
		public Keyword getDateTimeKeyword_10_0() { return cDateTimeKeyword_10_0; }

		//dateTime=DateTime
		public Assignment getDateTimeAssignment_10_1() { return cDateTimeAssignment_10_1; }

		//DateTime
		public RuleCall getDateTimeDateTimeParserRuleCall_10_1_0() { return cDateTimeDateTimeParserRuleCall_10_1_0; }

		//"age"
		public Keyword getAgeKeyword_11() { return cAgeKeyword_11; }

		//age=Integer
		public Assignment getAgeAssignment_12() { return cAgeAssignment_12; }

		//Integer
		public RuleCall getAgeIntegerParserRuleCall_12_0() { return cAgeIntegerParserRuleCall_12_0; }

		//"prize"
		public Keyword getPrizeKeyword_13() { return cPrizeKeyword_13; }

		//prize=Decimal
		public Assignment getPrizeAssignment_14() { return cPrizeAssignment_14; }

		//Decimal
		public RuleCall getPrizeDecimalParserRuleCall_14_0() { return cPrizeDecimalParserRuleCall_14_0; }

		//"disabled"
		public Keyword getDisabledKeyword_15() { return cDisabledKeyword_15; }

		//disabled=Boolean
		public Assignment getDisabledAssignment_16() { return cDisabledAssignment_16; }

		//Boolean
		public RuleCall getDisabledBooleanParserRuleCall_16_0() { return cDisabledBooleanParserRuleCall_16_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_17() { return cRightSquareBracketKeyword_17; }
	}

	public class String0Elements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "String0");
		private final RuleCall cSTRINGTerminalRuleCall = (RuleCall)rule.eContents().get(1);
		
		//String0 returns type::String: / * TODO: implement this rule and an appropriate IValueConverter * / STRING;
		@Override public ParserRule getRule() { return rule; }

		/// * TODO: implement this rule and an appropriate IValueConverter * / STRING
		public RuleCall getSTRINGTerminalRuleCall() { return cSTRINGTerminalRuleCall; }
	}

	public class DateElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Date");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cINTTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cHyphenMinusKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cINTTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Keyword cHyphenMinusKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final RuleCall cINTTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		
		//Date returns type::Date: / * TODO: implement this rule and an appropriate IValueConverter * / INT "-" INT "-" INT;
		@Override public ParserRule getRule() { return rule; }

		/// * TODO: implement this rule and an appropriate IValueConverter * / INT "-" INT "-" INT
		public Group getGroup() { return cGroup; }

		/// * TODO: implement this rule and an appropriate IValueConverter * / INT
		public RuleCall getINTTerminalRuleCall_0() { return cINTTerminalRuleCall_0; }

		//"-"
		public Keyword getHyphenMinusKeyword_1() { return cHyphenMinusKeyword_1; }

		//INT
		public RuleCall getINTTerminalRuleCall_2() { return cINTTerminalRuleCall_2; }

		//"-"
		public Keyword getHyphenMinusKeyword_3() { return cHyphenMinusKeyword_3; }

		//INT
		public RuleCall getINTTerminalRuleCall_4() { return cINTTerminalRuleCall_4; }
	}

	public class TimeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Time");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cINTTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cINTTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Keyword cColonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final RuleCall cINTTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		
		//Time returns type::Time: / * TODO: implement this rule and an appropriate IValueConverter * / INT ":" INT ":" INT;
		@Override public ParserRule getRule() { return rule; }

		/// * TODO: implement this rule and an appropriate IValueConverter * / INT ":" INT ":" INT
		public Group getGroup() { return cGroup; }

		/// * TODO: implement this rule and an appropriate IValueConverter * / INT
		public RuleCall getINTTerminalRuleCall_0() { return cINTTerminalRuleCall_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//INT
		public RuleCall getINTTerminalRuleCall_2() { return cINTTerminalRuleCall_2; }

		//":"
		public Keyword getColonKeyword_3() { return cColonKeyword_3; }

		//INT
		public RuleCall getINTTerminalRuleCall_4() { return cINTTerminalRuleCall_4; }
	}

	public class DateTimeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DateTime");
		private final Keyword cDateTimeKeyword = (Keyword)rule.eContents().get(1);
		
		/// * TODO: implement this rule and an appropriate IValueConverter * / DateTime returns type::DateTime:
		//	"DateTime";
		@Override public ParserRule getRule() { return rule; }

		//"DateTime"
		public Keyword getDateTimeKeyword() { return cDateTimeKeyword; }
	}

	public class IntegerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Integer");
		private final RuleCall cINTTerminalRuleCall = (RuleCall)rule.eContents().get(1);
		
		//Integer returns type::Integer: / * TODO: implement this rule and an appropriate IValueConverter * / INT;
		@Override public ParserRule getRule() { return rule; }

		/// * TODO: implement this rule and an appropriate IValueConverter * / INT
		public RuleCall getINTTerminalRuleCall() { return cINTTerminalRuleCall; }
	}

	public class DecimalElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Decimal");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cINTTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cFullStopKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cINTTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//Decimal returns type::Decimal: / * TODO: implement this rule and an appropriate IValueConverter * / INT "." INT;
		@Override public ParserRule getRule() { return rule; }

		/// * TODO: implement this rule and an appropriate IValueConverter * / INT "." INT
		public Group getGroup() { return cGroup; }

		/// * TODO: implement this rule and an appropriate IValueConverter * / INT
		public RuleCall getINTTerminalRuleCall_0() { return cINTTerminalRuleCall_0; }

		//"."
		public Keyword getFullStopKeyword_1() { return cFullStopKeyword_1; }

		//INT
		public RuleCall getINTTerminalRuleCall_2() { return cINTTerminalRuleCall_2; }
	}

	public class BooleanElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Boolean");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cTrueKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cFalseKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//Boolean returns type::Boolean: / * TODO: implement this rule and an appropriate IValueConverter * / "true" | "false";
		@Override public ParserRule getRule() { return rule; }

		/// * TODO: implement this rule and an appropriate IValueConverter * / "true" | "false"
		public Alternatives getAlternatives() { return cAlternatives; }

		/// * TODO: implement this rule and an appropriate IValueConverter * / "true"
		public Keyword getTrueKeyword_0() { return cTrueKeyword_0; }

		//"false"
		public Keyword getFalseKeyword_1() { return cFalseKeyword_1; }
	}

	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EString");
		private final RuleCall cSTRINGTerminalRuleCall = (RuleCall)rule.eContents().get(1);
		
		//EString returns ecore::EString:
		//	STRING;
		@Override public ParserRule getRule() { return rule; }

		//STRING
		public RuleCall getSTRINGTerminalRuleCall() { return cSTRINGTerminalRuleCall; }
	}
	
	
	private final LibraryTypeElements pLibraryType;
	private final CustomerTypeElements pCustomerType;
	private final String0Elements pString0;
	private final DateElements pDate;
	private final TimeElements pTime;
	private final DateTimeElements pDateTime;
	private final IntegerElements pInteger;
	private final DecimalElements pDecimal;
	private final BooleanElements pBoolean;
	private final EStringElements pEString;
	
	private final Grammar grammar;

	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public DatatypeGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pLibraryType = new LibraryTypeElements();
		this.pCustomerType = new CustomerTypeElements();
		this.pString0 = new String0Elements();
		this.pDate = new DateElements();
		this.pTime = new TimeElements();
		this.pDateTime = new DateTimeElements();
		this.pInteger = new IntegerElements();
		this.pDecimal = new DecimalElements();
		this.pBoolean = new BooleanElements();
		this.pEString = new EStringElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("at.ac.tuwien.big.xmltext.Datatype.Datatype".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//LibraryType:
	//	{LibraryType} "LibraryType" "[" ("customer" "[" customer+=CustomerType ("," customer+=CustomerType)* "]")? "]";
	public LibraryTypeElements getLibraryTypeAccess() {
		return pLibraryType;
	}
	
	public ParserRule getLibraryTypeRule() {
		return getLibraryTypeAccess().getRule();
	}

	//CustomerType:
	//	"CustomerType" "[" "firstName" firstName=String0 "lastName" lastName=String0 "birthDate" birthDate=Date "birthTime"
	//	birthTime=Time ("dateTime" dateTime=DateTime)? "age" age=Integer "prize" prize=Decimal "disabled" disabled=Boolean
	//	"]";
	public CustomerTypeElements getCustomerTypeAccess() {
		return pCustomerType;
	}
	
	public ParserRule getCustomerTypeRule() {
		return getCustomerTypeAccess().getRule();
	}

	//String0 returns type::String: / * TODO: implement this rule and an appropriate IValueConverter * / STRING;
	public String0Elements getString0Access() {
		return pString0;
	}
	
	public ParserRule getString0Rule() {
		return getString0Access().getRule();
	}

	//Date returns type::Date: / * TODO: implement this rule and an appropriate IValueConverter * / INT "-" INT "-" INT;
	public DateElements getDateAccess() {
		return pDate;
	}
	
	public ParserRule getDateRule() {
		return getDateAccess().getRule();
	}

	//Time returns type::Time: / * TODO: implement this rule and an appropriate IValueConverter * / INT ":" INT ":" INT;
	public TimeElements getTimeAccess() {
		return pTime;
	}
	
	public ParserRule getTimeRule() {
		return getTimeAccess().getRule();
	}

	/// * TODO: implement this rule and an appropriate IValueConverter * / DateTime returns type::DateTime:
	//	"DateTime";
	public DateTimeElements getDateTimeAccess() {
		return pDateTime;
	}
	
	public ParserRule getDateTimeRule() {
		return getDateTimeAccess().getRule();
	}

	//Integer returns type::Integer: / * TODO: implement this rule and an appropriate IValueConverter * / INT;
	public IntegerElements getIntegerAccess() {
		return pInteger;
	}
	
	public ParserRule getIntegerRule() {
		return getIntegerAccess().getRule();
	}

	//Decimal returns type::Decimal: / * TODO: implement this rule and an appropriate IValueConverter * / INT "." INT;
	public DecimalElements getDecimalAccess() {
		return pDecimal;
	}
	
	public ParserRule getDecimalRule() {
		return getDecimalAccess().getRule();
	}

	//Boolean returns type::Boolean: / * TODO: implement this rule and an appropriate IValueConverter * / "true" | "false";
	public BooleanElements getBooleanAccess() {
		return pBoolean;
	}
	
	public ParserRule getBooleanRule() {
		return getBooleanAccess().getRule();
	}

	//EString returns ecore::EString:
	//	STRING;
	public EStringElements getEStringAccess() {
		return pEString;
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}

	//terminal ID:
	//	"^"? ("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	} 

	//terminal INT returns ecore::EInt:
	//	"0".."9"+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	} 

	//terminal STRING:
	//	"\"" ("\\" . / * 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' * / | !("\\" | "\""))* "\"" | "\'" ("\\" .
	//	/ * 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' * / | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	} 

	//terminal WS:
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	} 
}
