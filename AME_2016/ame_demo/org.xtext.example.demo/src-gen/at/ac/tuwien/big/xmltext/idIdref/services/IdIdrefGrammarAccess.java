/*
 * generated by Xtext
 */
package at.ac.tuwien.big.xmltext.idIdref.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import java.util.List;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class IdIdrefGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class EmployeeListTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EmployeeListType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cEmployeeListTypeAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cEmployeeListTypeKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cBossKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cBossAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cBossBossTypeParserRuleCall_3_2_0 = (RuleCall)cBossAssignment_3_2.eContents().get(0);
		private final Group cGroup_3_3 = (Group)cGroup_3.eContents().get(3);
		private final Keyword cCommaKeyword_3_3_0 = (Keyword)cGroup_3_3.eContents().get(0);
		private final Assignment cBossAssignment_3_3_1 = (Assignment)cGroup_3_3.eContents().get(1);
		private final RuleCall cBossBossTypeParserRuleCall_3_3_1_0 = (RuleCall)cBossAssignment_3_3_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_3_4 = (Keyword)cGroup_3.eContents().get(4);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cEmployeeKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cEmployeeAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cEmployeeEmployeeTypeParserRuleCall_4_2_0 = (RuleCall)cEmployeeAssignment_4_2.eContents().get(0);
		private final Group cGroup_4_3 = (Group)cGroup_4.eContents().get(3);
		private final Keyword cCommaKeyword_4_3_0 = (Keyword)cGroup_4_3.eContents().get(0);
		private final Assignment cEmployeeAssignment_4_3_1 = (Assignment)cGroup_4_3.eContents().get(1);
		private final RuleCall cEmployeeEmployeeTypeParserRuleCall_4_3_1_0 = (RuleCall)cEmployeeAssignment_4_3_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_4_4 = (Keyword)cGroup_4.eContents().get(4);
		private final Keyword cRightSquareBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//EmployeeListType:
		//	{EmployeeListType} "EmployeeListType" "[" ("boss" "[" boss+=BossType ("," boss+=BossType)* "]")? ("employee" "["
		//	employee+=EmployeeType ("," employee+=EmployeeType)* "]")? "]";
		@Override public ParserRule getRule() { return rule; }

		//{EmployeeListType} "EmployeeListType" "[" ("boss" "[" boss+=BossType ("," boss+=BossType)* "]")? ("employee" "["
		//employee+=EmployeeType ("," employee+=EmployeeType)* "]")? "]"
		public Group getGroup() { return cGroup; }

		//{EmployeeListType}
		public Action getEmployeeListTypeAction_0() { return cEmployeeListTypeAction_0; }

		//"EmployeeListType"
		public Keyword getEmployeeListTypeKeyword_1() { return cEmployeeListTypeKeyword_1; }

		//"["
		public Keyword getLeftSquareBracketKeyword_2() { return cLeftSquareBracketKeyword_2; }

		//("boss" "[" boss+=BossType ("," boss+=BossType)* "]")?
		public Group getGroup_3() { return cGroup_3; }

		//"boss"
		public Keyword getBossKeyword_3_0() { return cBossKeyword_3_0; }

		//"["
		public Keyword getLeftSquareBracketKeyword_3_1() { return cLeftSquareBracketKeyword_3_1; }

		//boss+=BossType
		public Assignment getBossAssignment_3_2() { return cBossAssignment_3_2; }

		//BossType
		public RuleCall getBossBossTypeParserRuleCall_3_2_0() { return cBossBossTypeParserRuleCall_3_2_0; }

		//("," boss+=BossType)*
		public Group getGroup_3_3() { return cGroup_3_3; }

		//","
		public Keyword getCommaKeyword_3_3_0() { return cCommaKeyword_3_3_0; }

		//boss+=BossType
		public Assignment getBossAssignment_3_3_1() { return cBossAssignment_3_3_1; }

		//BossType
		public RuleCall getBossBossTypeParserRuleCall_3_3_1_0() { return cBossBossTypeParserRuleCall_3_3_1_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_3_4() { return cRightSquareBracketKeyword_3_4; }

		//("employee" "[" employee+=EmployeeType ("," employee+=EmployeeType)* "]")?
		public Group getGroup_4() { return cGroup_4; }

		//"employee"
		public Keyword getEmployeeKeyword_4_0() { return cEmployeeKeyword_4_0; }

		//"["
		public Keyword getLeftSquareBracketKeyword_4_1() { return cLeftSquareBracketKeyword_4_1; }

		//employee+=EmployeeType
		public Assignment getEmployeeAssignment_4_2() { return cEmployeeAssignment_4_2; }

		//EmployeeType
		public RuleCall getEmployeeEmployeeTypeParserRuleCall_4_2_0() { return cEmployeeEmployeeTypeParserRuleCall_4_2_0; }

		//("," employee+=EmployeeType)*
		public Group getGroup_4_3() { return cGroup_4_3; }

		//","
		public Keyword getCommaKeyword_4_3_0() { return cCommaKeyword_4_3_0; }

		//employee+=EmployeeType
		public Assignment getEmployeeAssignment_4_3_1() { return cEmployeeAssignment_4_3_1; }

		//EmployeeType
		public RuleCall getEmployeeEmployeeTypeParserRuleCall_4_3_1_0() { return cEmployeeEmployeeTypeParserRuleCall_4_3_1_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_4_4() { return cRightSquareBracketKeyword_4_4; }

		//"]"
		public Keyword getRightSquareBracketKeyword_5() { return cRightSquareBracketKeyword_5; }
	}

	public class BossTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "BossType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cBossTypeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLastNameKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cLastNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLastNameString0ParserRuleCall_3_0 = (RuleCall)cLastNameAssignment_3.eContents().get(0);
		private final Keyword cBirthDateKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cBirthDateAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cBirthDateDateParserRuleCall_5_0 = (RuleCall)cBirthDateAssignment_5.eContents().get(0);
		private final Keyword cSuperBossKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cSuperBossAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final CrossReference cSuperBossIdValuesCrossReference_7_0 = (CrossReference)cSuperBossAssignment_7.eContents().get(0);
		private final RuleCall cSuperBossIdValuesIDTerminalRuleCall_7_0_1 = (RuleCall)cSuperBossIdValuesCrossReference_7_0.eContents().get(1);
		private final Keyword cBossIdKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cBossIdAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cBossIdIdValuesParserRuleCall_9_0 = (RuleCall)cBossIdAssignment_9.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_10 = (Keyword)cGroup.eContents().get(10);
		
		//BossType:
		//	"BossType" "[" "lastName" lastName=String0 "birthDate" birthDate=Date "superBoss" superBoss=[IdValues] "bossId"
		//	bossId=IdValues "]";
		@Override public ParserRule getRule() { return rule; }

		//"BossType" "[" "lastName" lastName=String0 "birthDate" birthDate=Date "superBoss" superBoss=[IdValues] "bossId"
		//bossId=IdValues "]"
		public Group getGroup() { return cGroup; }

		//"BossType"
		public Keyword getBossTypeKeyword_0() { return cBossTypeKeyword_0; }

		//"["
		public Keyword getLeftSquareBracketKeyword_1() { return cLeftSquareBracketKeyword_1; }

		//"lastName"
		public Keyword getLastNameKeyword_2() { return cLastNameKeyword_2; }

		//lastName=String0
		public Assignment getLastNameAssignment_3() { return cLastNameAssignment_3; }

		//String0
		public RuleCall getLastNameString0ParserRuleCall_3_0() { return cLastNameString0ParserRuleCall_3_0; }

		//"birthDate"
		public Keyword getBirthDateKeyword_4() { return cBirthDateKeyword_4; }

		//birthDate=Date
		public Assignment getBirthDateAssignment_5() { return cBirthDateAssignment_5; }

		//Date
		public RuleCall getBirthDateDateParserRuleCall_5_0() { return cBirthDateDateParserRuleCall_5_0; }

		//"superBoss"
		public Keyword getSuperBossKeyword_6() { return cSuperBossKeyword_6; }

		//superBoss=[IdValues]
		public Assignment getSuperBossAssignment_7() { return cSuperBossAssignment_7; }

		//[IdValues]
		public CrossReference getSuperBossIdValuesCrossReference_7_0() { return cSuperBossIdValuesCrossReference_7_0; }

		//ID
		public RuleCall getSuperBossIdValuesIDTerminalRuleCall_7_0_1() { return cSuperBossIdValuesIDTerminalRuleCall_7_0_1; }

		//"bossId"
		public Keyword getBossIdKeyword_8() { return cBossIdKeyword_8; }

		//bossId=IdValues
		public Assignment getBossIdAssignment_9() { return cBossIdAssignment_9; }

		//IdValues
		public RuleCall getBossIdIdValuesParserRuleCall_9_0() { return cBossIdIdValuesParserRuleCall_9_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_10() { return cRightSquareBracketKeyword_10; }
	}

	public class EmployeeTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EmployeeType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cEmployeeTypeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLastNameKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cLastNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLastNameString0ParserRuleCall_3_0 = (RuleCall)cLastNameAssignment_3.eContents().get(0);
		private final Keyword cBirthDateKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cBirthDateAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cBirthDateDateParserRuleCall_5_0 = (RuleCall)cBirthDateAssignment_5.eContents().get(0);
		private final Keyword cBossKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cBossAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final CrossReference cBossIdValuesCrossReference_7_0 = (CrossReference)cBossAssignment_7.eContents().get(0);
		private final RuleCall cBossIdValuesIDTerminalRuleCall_7_0_1 = (RuleCall)cBossIdValuesCrossReference_7_0.eContents().get(1);
		private final Keyword cEmployeeIdKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cEmployeeIdAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cEmployeeIdIdValuesParserRuleCall_9_0 = (RuleCall)cEmployeeIdAssignment_9.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_10 = (Keyword)cGroup.eContents().get(10);
		
		//EmployeeType:
		//	"EmployeeType" "[" "lastName" lastName=String0 "birthDate" birthDate=Date "boss" boss=[IdValues] "employeeId"
		//	employeeId=IdValues "]";
		@Override public ParserRule getRule() { return rule; }

		//"EmployeeType" "[" "lastName" lastName=String0 "birthDate" birthDate=Date "boss" boss=[IdValues] "employeeId"
		//employeeId=IdValues "]"
		public Group getGroup() { return cGroup; }

		//"EmployeeType"
		public Keyword getEmployeeTypeKeyword_0() { return cEmployeeTypeKeyword_0; }

		//"["
		public Keyword getLeftSquareBracketKeyword_1() { return cLeftSquareBracketKeyword_1; }

		//"lastName"
		public Keyword getLastNameKeyword_2() { return cLastNameKeyword_2; }

		//lastName=String0
		public Assignment getLastNameAssignment_3() { return cLastNameAssignment_3; }

		//String0
		public RuleCall getLastNameString0ParserRuleCall_3_0() { return cLastNameString0ParserRuleCall_3_0; }

		//"birthDate"
		public Keyword getBirthDateKeyword_4() { return cBirthDateKeyword_4; }

		//birthDate=Date
		public Assignment getBirthDateAssignment_5() { return cBirthDateAssignment_5; }

		//Date
		public RuleCall getBirthDateDateParserRuleCall_5_0() { return cBirthDateDateParserRuleCall_5_0; }

		//"boss"
		public Keyword getBossKeyword_6() { return cBossKeyword_6; }

		//boss=[IdValues]
		public Assignment getBossAssignment_7() { return cBossAssignment_7; }

		//[IdValues]
		public CrossReference getBossIdValuesCrossReference_7_0() { return cBossIdValuesCrossReference_7_0; }

		//ID
		public RuleCall getBossIdValuesIDTerminalRuleCall_7_0_1() { return cBossIdValuesIDTerminalRuleCall_7_0_1; }

		//"employeeId"
		public Keyword getEmployeeIdKeyword_8() { return cEmployeeIdKeyword_8; }

		//employeeId=IdValues
		public Assignment getEmployeeIdAssignment_9() { return cEmployeeIdAssignment_9; }

		//IdValues
		public RuleCall getEmployeeIdIdValuesParserRuleCall_9_0() { return cEmployeeIdIdValuesParserRuleCall_9_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_10() { return cRightSquareBracketKeyword_10; }
	}

	public class String0Elements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "String0");
		private final RuleCall cSTRINGTerminalRuleCall = (RuleCall)rule.eContents().get(1);
		
		//String0 returns type::String: / * TODO: implement this rule and an appropriate IValueConverter * / STRING;
		@Override public ParserRule getRule() { return rule; }

		/// * TODO: implement this rule and an appropriate IValueConverter * / STRING
		public RuleCall getSTRINGTerminalRuleCall() { return cSTRINGTerminalRuleCall; }
	}

	public class IdValuesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "IdValues");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cIdValuesAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameID0ParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		
		//IdValues:
		//	{IdValues} name=ID0;
		@Override public ParserRule getRule() { return rule; }

		//{IdValues} name=ID0
		public Group getGroup() { return cGroup; }

		//{IdValues}
		public Action getIdValuesAction_0() { return cIdValuesAction_0; }

		//name=ID0
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID0
		public RuleCall getNameID0ParserRuleCall_1_0() { return cNameID0ParserRuleCall_1_0; }
	}

	public class DateElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Date");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cINTTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cHyphenMinusKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cINTTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Keyword cHyphenMinusKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final RuleCall cINTTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		
		//Date returns type::Date: / * TODO: implement this rule and an appropriate IValueConverter * / INT "-" INT "-" INT;
		@Override public ParserRule getRule() { return rule; }

		/// * TODO: implement this rule and an appropriate IValueConverter * / INT "-" INT "-" INT
		public Group getGroup() { return cGroup; }

		/// * TODO: implement this rule and an appropriate IValueConverter * / INT
		public RuleCall getINTTerminalRuleCall_0() { return cINTTerminalRuleCall_0; }

		//"-"
		public Keyword getHyphenMinusKeyword_1() { return cHyphenMinusKeyword_1; }

		//INT
		public RuleCall getINTTerminalRuleCall_2() { return cINTTerminalRuleCall_2; }

		//"-"
		public Keyword getHyphenMinusKeyword_3() { return cHyphenMinusKeyword_3; }

		//INT
		public RuleCall getINTTerminalRuleCall_4() { return cINTTerminalRuleCall_4; }
	}

	public class ID0Elements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ID0");
		private final RuleCall cIDTerminalRuleCall = (RuleCall)rule.eContents().get(1);
		
		//ID0 returns type::ID: / * TODO: implement this rule and an appropriate IValueConverter * / ID;
		@Override public ParserRule getRule() { return rule; }

		/// * TODO: implement this rule and an appropriate IValueConverter * / ID
		public RuleCall getIDTerminalRuleCall() { return cIDTerminalRuleCall; }
	}

	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EString");
		private final RuleCall cSTRINGTerminalRuleCall = (RuleCall)rule.eContents().get(1);
		
		//EString returns ecore::EString:
		//	STRING;
		@Override public ParserRule getRule() { return rule; }

		//STRING
		public RuleCall getSTRINGTerminalRuleCall() { return cSTRINGTerminalRuleCall; }
	}
	
	
	private final EmployeeListTypeElements pEmployeeListType;
	private final BossTypeElements pBossType;
	private final EmployeeTypeElements pEmployeeType;
	private final String0Elements pString0;
	private final IdValuesElements pIdValues;
	private final DateElements pDate;
	private final ID0Elements pID0;
	private final EStringElements pEString;
	
	private final Grammar grammar;

	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public IdIdrefGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pEmployeeListType = new EmployeeListTypeElements();
		this.pBossType = new BossTypeElements();
		this.pEmployeeType = new EmployeeTypeElements();
		this.pString0 = new String0Elements();
		this.pIdValues = new IdValuesElements();
		this.pDate = new DateElements();
		this.pID0 = new ID0Elements();
		this.pEString = new EStringElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("at.ac.tuwien.big.xmltext.idIdref.IdIdref".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//EmployeeListType:
	//	{EmployeeListType} "EmployeeListType" "[" ("boss" "[" boss+=BossType ("," boss+=BossType)* "]")? ("employee" "["
	//	employee+=EmployeeType ("," employee+=EmployeeType)* "]")? "]";
	public EmployeeListTypeElements getEmployeeListTypeAccess() {
		return pEmployeeListType;
	}
	
	public ParserRule getEmployeeListTypeRule() {
		return getEmployeeListTypeAccess().getRule();
	}

	//BossType:
	//	"BossType" "[" "lastName" lastName=String0 "birthDate" birthDate=Date "superBoss" superBoss=[IdValues] "bossId"
	//	bossId=IdValues "]";
	public BossTypeElements getBossTypeAccess() {
		return pBossType;
	}
	
	public ParserRule getBossTypeRule() {
		return getBossTypeAccess().getRule();
	}

	//EmployeeType:
	//	"EmployeeType" "[" "lastName" lastName=String0 "birthDate" birthDate=Date "boss" boss=[IdValues] "employeeId"
	//	employeeId=IdValues "]";
	public EmployeeTypeElements getEmployeeTypeAccess() {
		return pEmployeeType;
	}
	
	public ParserRule getEmployeeTypeRule() {
		return getEmployeeTypeAccess().getRule();
	}

	//String0 returns type::String: / * TODO: implement this rule and an appropriate IValueConverter * / STRING;
	public String0Elements getString0Access() {
		return pString0;
	}
	
	public ParserRule getString0Rule() {
		return getString0Access().getRule();
	}

	//IdValues:
	//	{IdValues} name=ID0;
	public IdValuesElements getIdValuesAccess() {
		return pIdValues;
	}
	
	public ParserRule getIdValuesRule() {
		return getIdValuesAccess().getRule();
	}

	//Date returns type::Date: / * TODO: implement this rule and an appropriate IValueConverter * / INT "-" INT "-" INT;
	public DateElements getDateAccess() {
		return pDate;
	}
	
	public ParserRule getDateRule() {
		return getDateAccess().getRule();
	}

	//ID0 returns type::ID: / * TODO: implement this rule and an appropriate IValueConverter * / ID;
	public ID0Elements getID0Access() {
		return pID0;
	}
	
	public ParserRule getID0Rule() {
		return getID0Access().getRule();
	}

	//EString returns ecore::EString:
	//	STRING;
	public EStringElements getEStringAccess() {
		return pEString;
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}

	//terminal ID:
	//	"^"? ("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	} 

	//terminal INT returns ecore::EInt:
	//	"0".."9"+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	} 

	//terminal STRING:
	//	"\"" ("\\" . / * 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' * / | !("\\" | "\""))* "\"" | "\'" ("\\" .
	//	/ * 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' * / | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	} 

	//terminal WS:
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	} 
}
